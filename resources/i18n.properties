command.description.sbt=install or upgrade sbt-launch.jar & sbt launch scripts
command.description.new=create new sbt project
description.sbt.version=[VERSION|latest] if no version nor 'latest' specified choose from a list

sbt.choose_a_version_to_install=Choose a version to install
sbt.cleaned_up_msg=sbt cleaned up, keeping only latest installed version.
sbt.version_already_installed=Version {0} already installed. Quit.
sbt.installing_sbt_version=Installing sbt version {0}
sbt.install_completed=Installation completed.
sbt.sbt_not_installed=sbt not installed.
sbt.installed_versions=Installed versions:
sbt.currently_in_use=\uFF08currently using\uFF09
sbt.currently_using_sbt_version=Now using sbt {0}
sbt.use_sbt_version=Use sbt {0}
sbt.deleting_version=Deleting sbt version {0} ...
sbt.completed=" completed."
sbt.version_currently_not_installed=Version {0} currently not installed.
sbt.currently_using_version=Currently using version: {0}
sbt.choose_a_version_to_use=Choose a version to use

main.show_all_versions=Show all versions
main.command_line_argument_error="Command line argument error:\n\n"
main.usage=Usage:\n\
 mile1 list\t\t\t; list installed sbt versions\n\
 mile1 available [-a]\t\t; list all sbt versions, show stable versions by default, '-a' show all versions, including Milestones, Rcs\n\
 mile1 install [VERSION]\t; install specified sbt version, latest stable version by default\n\
 mile1 uninstall VERSION\t; uninstall specified sbt version\n\
 mile1 cleanup\t\t\t; keep latest installed version, uninstall others\n\
 mile1 use VERSION\t\t; use specified sbt version\n\
 mile1 upgrade\t\t\t; upgrade Mile1 to latest version\n\
 mile1 usage\t\t\t; show this message